# This Docker Compose file sets up a local WordPress development environment using Docker containers.
# The 'wordpress_srv' and 'mysqldb_srv' services use the latest official WordPress and MySQL Docker images.
# The MySQL container's port 3306 is exposed to the host machine port 3306, so as databases can be accessed remotely.
# The WordPress container's port 80 is also exposed to the host machine port 8000, so as the Wordpress webiste can be managed remotely from respective web interface.
# The WordPress files are also mapped to a local directory, and variables are used to configure the database settings.
#
# To start the environment, run 'docker compose up -d' in this directory, and to stop it, run 'docker compose down'.
# You will be asked to setup the the Wordpres site details during initialisation step of the setup.
#
# The following sample is intended for use in local development environments such as project setups, etc. 
# This sample must not be deployed in production environments.

version: "3" 

# Services Definitions
services:

  # mySQL Service Section
  mysqldb_srv:
    image: mysql:latest
    container_name: wordpress_db
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpre8
      MYSQL_PASSWORD: wordpress
    volumes:
      - wp_data:/var/lib/mysql
    networks:
      - wp_net
 
  # Wordpress Service Section
  wordpress_srv:
    image: wordpress:latest
    container_name: wordpress_wp
    restart: always
    depends_on:
      - mysqldb_srv
    ports:
      - 8000:80
    environment:
      WORDPRESS_DB_HOST: mysqldb_srv:3306
      WORDPRESS_DB_USER: wordpre8
      WORDPRESS_DB_PASSWORD: wordpress
    networks:
      - wp_net

# Shared Resources Section
volumes:
  wp_data:
networks:
  wp_net: